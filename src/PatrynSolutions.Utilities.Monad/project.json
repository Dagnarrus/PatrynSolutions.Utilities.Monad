{
  "version": "1.0.4",
  "authors": [ "Jarrod Rackley" ],
  "description": "An implementation of Monad in C#. Provides a simple data DTO to guarantee some form of result, be it a desired value, exception, message, error code, etc.",


  "frameworks": {
    "netstandard1.6": {
      "imports": "dnxcore50",
      "dependencies": {
        "NETStandard.Library": "1.6.0"
      }
    },
    "dnx451": {
      "dependencies": {
        "System.Core": "3.5.21022.801",
        "System.Collections": "4.0.0",
        "System.Linq": "4.0.0",
        "dotnet-test-xunit": "2.2.0-preview2-build1029"
      }
    },
    "net461": {
      "dependencies": {
        "System.Core": "3.5.21022.801",
        "System.Collections": "4.0.10",
        "System.Linq": "4.0.0",
        "dotnet-test-xunit": "2.2.0-preview2-build1029"
      }
    },
    "net452": {
      "dependencies": {
        "System.Core": "3.5.21022.801",
        "System.Collections": "4.0.0",
        "System.Linq": "4.0.0",
        "dotnet-test-xunit": "2.2.0-preview2-build1029"
      }
    },
    "net451": {
      "dependencies": {
        "System.Core": "3.5.21022.801",
        "System.Collections": "4.0.0",
        "System.Linq": "4.0.0",
        "dotnet-test-xunit": "2.2.0-preview2-build1029"
      }
    }
  },

  "packOptions": {
    "owners": [ "Jarrod Rackley" ],
    "releaseNotes": "Changed the Maybe classes to struct. Implemented IMaybe interface and constructor overloads for each. Added implicit operators to auto wrap certain values, and unbox certain properties. Added an extension for converting an enumerable of objects, to a collection of objects wrapped within the maybe.",
    "licenseUrl": "https://www.apache.org/licenses/LICENSE-2.0",
    "repository": {
      "url": "https://github.com/TeturactsWill/PatrynSolutions.Utilities.Monad"
    },
    "requireLicenseAcceptance": false,
    "tags": [ "C#", "Monad", "Maybe" ]
  }
}
